<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.dao.StuscoreMapper" >
  <resultMap id="BaseResultMap" type="com.cn.bean.Stuscore" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="studentid" property="studentid" jdbcType="INTEGER" />
    <result column="coursename" property="coursename" jdbcType="VARCHAR" />
    <result column="score" property="score" jdbcType="VARCHAR" />
    <result column="credit" property="credit" jdbcType="INTEGER" />
    <result column="point" property="point" jdbcType="DOUBLE" />
    <result column="termid" property="termid" jdbcType="INTEGER" />
    <result column="couresid" property="couresid" jdbcType="INTEGER" />
    <result column="electiveid" property="electiveid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, studentid, coursename, score, credit, point, termid, couresid, electiveid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cn.bean.StuscoreExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from stuscore
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from stuscore
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from stuscore
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cn.bean.StuscoreExample" >
    delete from stuscore
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cn.bean.Stuscore" >
    insert into stuscore (id, studentid, coursename, 
      score, credit, point, 
      termid, couresid, electiveid
      )
    values (#{id,jdbcType=INTEGER}, #{studentid,jdbcType=INTEGER}, #{coursename,jdbcType=VARCHAR}, 
      #{score,jdbcType=VARCHAR}, #{credit,jdbcType=INTEGER}, #{point,jdbcType=DOUBLE}, 
      #{termid,jdbcType=INTEGER}, #{couresid,jdbcType=INTEGER}, #{electiveid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cn.bean.Stuscore" >
    insert into stuscore
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="studentid != null" >
        studentid,
      </if>
      <if test="coursename != null" >
        coursename,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="credit != null" >
        credit,
      </if>
      <if test="point != null" >
        point,
      </if>
      <if test="termid != null" >
        termid,
      </if>
      <if test="couresid != null" >
        couresid,
      </if>
      <if test="electiveid != null" >
        electiveid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="studentid != null" >
        #{studentid,jdbcType=INTEGER},
      </if>
      <if test="coursename != null" >
        #{coursename,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        #{score,jdbcType=VARCHAR},
      </if>
      <if test="credit != null" >
        #{credit,jdbcType=INTEGER},
      </if>
      <if test="point != null" >
        #{point,jdbcType=DOUBLE},
      </if>
      <if test="termid != null" >
        #{termid,jdbcType=INTEGER},
      </if>
      <if test="couresid != null" >
        #{couresid,jdbcType=INTEGER},
      </if>
      <if test="electiveid != null" >
        #{electiveid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cn.bean.StuscoreExample" resultType="java.lang.Integer" >
    select count(*) from stuscore
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update stuscore
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.studentid != null" >
        studentid = #{record.studentid,jdbcType=INTEGER},
      </if>
      <if test="record.coursename != null" >
        coursename = #{record.coursename,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null" >
        score = #{record.score,jdbcType=VARCHAR},
      </if>
      <if test="record.credit != null" >
        credit = #{record.credit,jdbcType=INTEGER},
      </if>
      <if test="record.point != null" >
        point = #{record.point,jdbcType=DOUBLE},
      </if>
      <if test="record.termid != null" >
        termid = #{record.termid,jdbcType=INTEGER},
      </if>
      <if test="record.couresid != null" >
        couresid = #{record.couresid,jdbcType=INTEGER},
      </if>
      <if test="record.electiveid != null" >
        electiveid = #{record.electiveid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update stuscore
    set id = #{record.id,jdbcType=INTEGER},
      studentid = #{record.studentid,jdbcType=INTEGER},
      coursename = #{record.coursename,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=VARCHAR},
      credit = #{record.credit,jdbcType=INTEGER},
      point = #{record.point,jdbcType=DOUBLE},
      termid = #{record.termid,jdbcType=INTEGER},
      couresid = #{record.couresid,jdbcType=INTEGER},
      electiveid = #{record.electiveid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cn.bean.Stuscore" >
    update stuscore
    <set >
      <if test="studentid != null" >
        studentid = #{studentid,jdbcType=INTEGER},
      </if>
      <if test="coursename != null" >
        coursename = #{coursename,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=VARCHAR},
      </if>
      <if test="credit != null" >
        credit = #{credit,jdbcType=INTEGER},
      </if>
      <if test="point != null" >
        point = #{point,jdbcType=DOUBLE},
      </if>
      <if test="termid != null" >
        termid = #{termid,jdbcType=INTEGER},
      </if>
      <if test="couresid != null" >
        couresid = #{couresid,jdbcType=INTEGER},
      </if>
      <if test="electiveid != null" >
        electiveid = #{electiveid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cn.bean.Stuscore" >
    update stuscore
    set studentid = #{studentid,jdbcType=INTEGER},
      coursename = #{coursename,jdbcType=VARCHAR},
      score = #{score,jdbcType=VARCHAR},
      credit = #{credit,jdbcType=INTEGER},
      point = #{point,jdbcType=DOUBLE},
      termid = #{termid,jdbcType=INTEGER},
      couresid = #{couresid,jdbcType=INTEGER},
      electiveid = #{electiveid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>